package merge_test

import (
	"github.com/cpustejovsky/customsortgo/count"
	"github.com/cpustejovsky/customsortgo/merge"
	"testing"
)

func TestSort(t *testing.T) {
	input := []int{5, 2, 4, 6, 1, 3}
	want := []int{1, 2, 3, 4, 5, 6}
	merge.Sort(input, 0, len(input)-1)
	if !sameSlices(input, want) {
		t.Fatalf("\ngot:\t%v\nwant:\t%v\n", input, want)
	}
}

func TestNewSorted(t *testing.T) {
	input := []int{5, 2, 4, 6, 1, 3}
	want := []int{1, 2, 3, 4, 5, 6}
	got := merge.NewSorted(input)
	if !sameSlices(got, want) {
		t.Fatalf("got:\t%v\nwant:\t%v\n", got, want)
	}
	input = []int{31, 41, 59, 26, 41, 58}
	want = []int{26, 31, 41, 41, 58, 59}
	got = merge.NewSorted(input)
	if !sameSlices(got, want) {
		t.Fatalf("got:\t%v\nwant:\t%v\n", got, want)
	}
}

var nums = []int{701, 32, 22, 366, 958, 476, 106, 297, 376, 656, 327, 743, 336, 244, 157, 600, 977, 740, 97, 901, 60, 459, 671, 594, 849, 608, 266, 408, 779, 338, 779, 704, 24, 744, 181, 786, 143, 980, 110, 110, 256, 387, 218, 675, 638, 655, 920, 166, 833, 186, 579, 286, 672, 214, 620, 715, 795, 137, 455, 112, 839, 876, 897, 816, 173, 884, 468, 633, 170, 69, 440, 857, 918, 387, 35, 735, 855, 396, 212, 77, 3, 285, 585, 320, 316, 245, 499, 8, 636, 575, 718, 90, 891, 77, 447, 916, 427, 170, 175, 541, 93, 181, 723, 514, 578, 358, 910, 283, 977, 594, 639, 298, 351, 881, 723, 955, 937, 681, 787, 653, 858, 728, 318, 174, 925, 498, 204, 1, 925, 853, 14, 767, 281, 957, 302, 491, 480, 117, 384, 633, 751, 38, 984, 159, 104, 485, 296, 556, 504, 163, 23, 109, 215, 15, 451, 475, 726, 936, 51, 561, 779, 851, 951, 938, 145, 68, 29, 25, 732, 285, 751, 622, 502, 887, 249, 960, 42, 72, 107, 171, 81, 153, 342, 379, 184, 118, 897, 915, 436, 383, 322, 755, 32, 919, 341, 645, 928, 786, 388, 142, 115, 85, 54, 296, 548, 903, 594, 52, 741, 190, 745, 545, 379, 410, 891, 756, 352, 605, 750, 243, 931, 374, 736, 215, 565, 758, 872, 922, 635, 742, 921, 729, 830, 90, 91, 683, 98, 650, 239, 194, 607, 830, 761, 28, 431, 359, 436, 412, 61, 592, 410, 615, 934, 510, 831, 679, 921, 4, 294, 822, 558, 99, 806, 309, 371, 114, 554, 170, 691, 591, 724, 964, 817, 300, 542, 816, 551, 697, 709, 296, 807, 380, 945, 497, 632, 990, 606, 730, 303, 927, 752, 875, 15, 763, 645, 157, 608, 370, 108, 541, 473, 509, 449, 0, 875, 838, 376, 729, 773, 959, 747, 156, 653, 197, 445, 379, 876, 810, 479, 685, 227, 449, 420, 158, 670, 898, 604, 241, 910, 654, 187, 219, 423, 397, 545, 119, 591, 281, 536, 357, 841, 96, 277, 702, 825, 669, 233, 44, 223, 571, 362, 403, 320, 563, 939, 677, 619, 125, 836, 135, 362, 652, 161, 501, 92, 22, 916, 250, 443, 553, 954, 676, 362, 245, 9, 144, 799, 465, 986, 528, 663, 831, 764, 752, 662, 683, 430, 617, 131, 528, 650, 760, 192, 473, 648, 467, 388, 362, 642, 435, 279, 623, 734, 683, 199, 810, 719, 894, 231, 49, 138, 684, 670, 151, 132, 288, 427, 722, 555, 178, 422, 815, 897, 493, 837, 763, 571, 408, 47, 554, 276, 507, 674, 688, 198, 543, 795, 538, 575, 422, 29, 965, 964, 200, 813, 70, 127, 447, 90, 447, 227, 421, 111, 320, 74, 895, 636, 118, 14, 977, 274, 678, 938, 36, 186, 92, 854, 47, 373, 571, 982, 206, 688, 123, 105, 873, 427, 981, 18, 850, 485, 934, 276, 680, 785, 764, 636, 476, 117, 168, 139, 575, 874, 393, 110, 474, 210, 486, 407, 209, 331, 642, 786, 304, 884, 659, 813, 441, 677, 508, 386, 83, 952, 194, 448, 292, 594, 196, 465, 362, 980, 229, 577, 394, 184, 457, 591, 323, 168, 348, 657, 275, 843, 945, 545, 264, 377, 637, 420, 842, 16, 294, 27, 841, 692, 182, 542, 748, 882, 154, 261, 88, 375, 390, 452, 422, 833, 466, 146, 609, 975, 829, 809, 290, 601, 445, 471, 822, 835, 269, 346, 224, 370, 41, 887, 794, 112, 147, 677, 829, 956, 584, 128, 237, 24, 713, 835, 462, 633, 660, 901, 498, 965, 287, 477, 583, 310, 962, 637, 734, 409, 915, 893, 820, 590, 940, 368, 305, 740, 75, 16, 835, 466, 656, 168, 704, 116, 958, 331, 688, 379, 321, 595, 600, 539, 585, 26, 333, 764, 502, 331, 601, 558, 119, 25, 748, 476, 691, 395, 182, 235, 466, 591, 947, 813, 96, 123, 813, 225, 504, 548, 172, 254, 322, 193, 459, 651, 966, 114, 299, 695, 586, 220, 422, 3, 170, 517, 513, 357, 103, 629, 934, 826, 434, 753, 596, 55, 229, 265, 80, 811, 33, 243, 209, 184, 804, 226, 225, 929, 549, 890, 603, 903, 912, 133, 809, 783, 650, 976, 974, 466, 79, 526, 485, 317, 200, 46, 910, 579, 560, 774, 396, 354, 162, 411, 194, 345, 208, 89, 793, 98, 414, 490, 616, 922, 731, 102, 318, 221, 880, 776, 940, 55, 48, 666, 548, 641, 379, 539, 275, 826, 809, 484, 882, 478, 658, 629, 282, 650, 784, 295, 956, 951, 837, 777, 140, 209, 964, 788, 124, 793, 701, 494, 632, 605, 325, 339, 636, 141, 730, 140, 958, 327, 941, 913, 804, 125, 107, 625, 762, 387, 303, 483, 415, 773, 338, 149, 583, 888, 540, 335, 949, 116, 117, 680, 516, 402, 69, 753, 686, 699, 515, 801, 943, 860, 135, 582, 218, 540, 571, 347, 56, 593, 21, 622, 329, 925, 241, 308, 269, 577, 639, 976, 296, 977, 28, 621, 932, 838, 619, 994, 704, 21, 643, 568, 992, 54, 46, 541, 407, 437, 312, 84, 278, 226, 879, 465, 920, 815, 446, 791, 83, 133, 717, 76, 2, 560, 631, 616, 324, 155, 52, 82, 545, 285, 915, 182, 312, 89, 204, 109, 43, 301, 770, 494, 651, 86, 121, 586, 222, 535, 351, 209, 133, 992, 719, 718, 844, 75, 785, 133, 389, 950, 876, 969, 812, 346, 604, 871, 521, 917, 116, 430, 473, 750, 872, 614, 507, 815, 917, 500, 477, 687, 139, 483, 186, 721, 30, 626, 830, 60, 691, 98, 920, 753, 596, 588, 372, 897, 825, 199, 514, 823, 546, 107, 176, 842, 590, 390, 611, 78, 209, 742, 158, 944, 792, 480, 176, 257, 709, 484, 155, 329, 647, 339, 72, 135, 147, 257, 884, 737, 948, 279, 287, 762, 495, 422, 712, 901, 634, 651, 352, 213, 287, 77, 964, 874, 313, 766, 615, 349, 413, 909, 351, 813, 804, 107, 717, 713, 438, 461, 668, 878, 286, 700, 173, 42, 643, 937, 737}
var want = []int{0, 1, 2, 3, 3, 4, 8, 9, 14, 14, 15, 15, 16, 16, 18, 21, 21, 22, 22, 23, 24, 24, 25, 25, 26, 27, 28, 28, 29, 29, 30, 32, 32, 33, 35, 36, 38, 41, 42, 42, 43, 44, 46, 46, 47, 47, 48, 49, 51, 52, 52, 54, 54, 55, 55, 56, 60, 60, 61, 68, 69, 69, 70, 72, 72, 74, 75, 75, 76, 77, 77, 77, 78, 79, 80, 81, 82, 83, 83, 84, 85, 86, 88, 89, 89, 90, 90, 90, 91, 92, 92, 93, 96, 96, 97, 98, 98, 98, 99, 102, 103, 104, 105, 106, 107, 107, 107, 107, 108, 109, 109, 110, 110, 110, 111, 112, 112, 114, 114, 115, 116, 116, 116, 117, 117, 117, 118, 118, 119, 119, 121, 123, 123, 124, 125, 125, 127, 128, 131, 132, 133, 133, 133, 133, 135, 135, 135, 137, 138, 139, 139, 140, 140, 141, 142, 143, 144, 145, 146, 147, 147, 149, 151, 153, 154, 155, 155, 156, 157, 157, 158, 158, 159, 161, 162, 163, 166, 168, 168, 168, 170, 170, 170, 170, 171, 172, 173, 173, 174, 175, 176, 176, 178, 181, 181, 182, 182, 182, 184, 184, 184, 186, 186, 186, 187, 190, 192, 193, 194, 194, 194, 196, 197, 198, 199, 199, 200, 200, 204, 204, 206, 208, 209, 209, 209, 209, 209, 210, 212, 213, 214, 215, 215, 218, 218, 219, 220, 221, 222, 223, 224, 225, 225, 226, 226, 227, 227, 229, 229, 231, 233, 235, 237, 239, 241, 241, 243, 243, 244, 245, 245, 249, 250, 254, 256, 257, 257, 261, 264, 265, 266, 269, 269, 274, 275, 275, 276, 276, 277, 278, 279, 279, 281, 281, 282, 283, 285, 285, 285, 286, 286, 287, 287, 287, 288, 290, 292, 294, 294, 295, 296, 296, 296, 296, 297, 298, 299, 300, 301, 302, 303, 303, 304, 305, 308, 309, 310, 312, 312, 313, 316, 317, 318, 318, 320, 320, 320, 321, 322, 322, 323, 324, 325, 327, 327, 329, 329, 331, 331, 331, 333, 335, 336, 338, 338, 339, 339, 341, 342, 345, 346, 346, 347, 348, 349, 351, 351, 351, 352, 352, 354, 357, 357, 358, 359, 362, 362, 362, 362, 362, 366, 368, 370, 370, 371, 372, 373, 374, 375, 376, 376, 377, 379, 379, 379, 379, 379, 380, 383, 384, 386, 387, 387, 387, 388, 388, 389, 390, 390, 393, 394, 395, 396, 396, 397, 402, 403, 407, 407, 408, 408, 409, 410, 410, 411, 412, 413, 414, 415, 420, 420, 421, 422, 422, 422, 422, 422, 423, 427, 427, 427, 430, 430, 431, 434, 435, 436, 436, 437, 438, 440, 441, 443, 445, 445, 446, 447, 447, 447, 448, 449, 449, 451, 452, 455, 457, 459, 459, 461, 462, 465, 465, 465, 466, 466, 466, 466, 467, 468, 471, 473, 473, 473, 474, 475, 476, 476, 476, 477, 477, 478, 479, 480, 480, 483, 483, 484, 484, 485, 485, 485, 486, 490, 491, 493, 494, 494, 495, 497, 498, 498, 499, 500, 501, 502, 502, 504, 504, 507, 507, 508, 509, 510, 513, 514, 514, 515, 516, 517, 521, 526, 528, 528, 535, 536, 538, 539, 539, 540, 540, 541, 541, 541, 542, 542, 543, 545, 545, 545, 545, 546, 548, 548, 548, 549, 551, 553, 554, 554, 555, 556, 558, 558, 560, 560, 561, 563, 565, 568, 571, 571, 571, 571, 575, 575, 575, 577, 577, 578, 579, 579, 582, 583, 583, 584, 585, 585, 586, 586, 588, 590, 590, 591, 591, 591, 591, 592, 593, 594, 594, 594, 594, 595, 596, 596, 600, 600, 601, 601, 603, 604, 604, 605, 605, 606, 607, 608, 608, 609, 611, 614, 615, 615, 616, 616, 617, 619, 619, 620, 621, 622, 622, 623, 625, 626, 629, 629, 631, 632, 632, 633, 633, 633, 634, 635, 636, 636, 636, 636, 637, 637, 638, 639, 639, 641, 642, 642, 643, 643, 645, 645, 647, 648, 650, 650, 650, 650, 651, 651, 651, 652, 653, 653, 654, 655, 656, 656, 657, 658, 659, 660, 662, 663, 666, 668, 669, 670, 670, 671, 672, 674, 675, 676, 677, 677, 677, 678, 679, 680, 680, 681, 683, 683, 683, 684, 685, 686, 687, 688, 688, 688, 691, 691, 691, 692, 695, 697, 699, 700, 701, 701, 702, 704, 704, 704, 709, 709, 712, 713, 713, 715, 717, 717, 718, 718, 719, 719, 721, 722, 723, 723, 724, 726, 728, 729, 729, 730, 730, 731, 732, 734, 734, 735, 736, 737, 737, 740, 740, 741, 742, 742, 743, 744, 745, 747, 748, 748, 750, 750, 751, 751, 752, 752, 753, 753, 753, 755, 756, 758, 760, 761, 762, 762, 763, 763, 764, 764, 764, 766, 767, 770, 773, 773, 774, 776, 777, 779, 779, 779, 783, 784, 785, 785, 786, 786, 786, 787, 788, 791, 792, 793, 793, 794, 795, 795, 799, 801, 804, 804, 804, 806, 807, 809, 809, 809, 810, 810, 811, 812, 813, 813, 813, 813, 813, 815, 815, 815, 816, 816, 817, 820, 822, 822, 823, 825, 825, 826, 826, 829, 829, 830, 830, 830, 831, 831, 833, 833, 835, 835, 835, 836, 837, 837, 838, 838, 839, 841, 841, 842, 842, 843, 844, 849, 850, 851, 853, 854, 855, 857, 858, 860, 871, 872, 872, 873, 874, 874, 875, 875, 876, 876, 876, 878, 879, 880, 881, 882, 882, 884, 884, 884, 887, 887, 888, 890, 891, 891, 893, 894, 895, 897, 897, 897, 897, 898, 901, 901, 901, 903, 903, 909, 910, 910, 910, 912, 913, 915, 915, 915, 916, 916, 917, 917, 918, 919, 920, 920, 920, 921, 921, 922, 922, 925, 925, 925, 927, 928, 929, 931, 932, 934, 934, 934, 936, 937, 937, 938, 938, 939, 940, 940, 941, 943, 944, 945, 945, 947, 948, 949, 950, 951, 951, 952, 954, 955, 956, 956, 957, 958, 958, 958, 959, 960, 962, 964, 964, 964, 964, 965, 965, 966, 969, 974, 975, 976, 976, 977, 977, 977, 977, 980, 980, 981, 982, 984, 986, 990, 992, 992, 994}

func BenchmarkCountSort(b *testing.B) {
	for i := 0; i < b.N; i++ {
		var n []int
		copy(n, nums)
		count.Sort(n, 1000)
		if !sameSlices(n, want) {
			b.Fatalf("got:\t%v\nwant:\t%v\n", n, want)
		}
	}
}

func BenchmarkMergeSort(b *testing.B) {
	for i := 0; i < b.N; i++ {
		var n []int
		copy(n, nums)
		merge.Sort(n, 0, len(n)-1)
		if !sameSlices(n, want) {
			b.Fatalf("got:\t%v\nwant:\t%v\n", n, want)
		}
	}
}

func sameSlices[C comparable](a, b []C) bool {
	for i, element := range a {
		if element != b[i] {
			return false
		}
	}
	return true
}
